{"version":3,"sources":["Navbar.js","useFetch.js","display.js","displayContest.js","contest.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","history","useHistory","useState","handle","setHandle","className","type","value","required","onChange","e","target","placeholder","onClick","preventDefault","console","log","push","useFetch","url","data","setData","pending","setPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort","BlogList","useParams","blogs","result","map","blog","src","avatar","alt","rank","rating","maxRank","maxRating","contribution","friendOfCount","to","DisplayCont","prop","contest","contestName","oldRating","newRating","contestId","Contests","cont","scope","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fb2ca78.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const history = useHistory();\r\n    const [handle,setHandle] = useState('');\r\n  \r\n    const handleData = (e) => {\r\n        e.preventDefault();\r\n        console.log(handle);\r\n        history.push(`/display/${handle}`)\r\n    };\r\n\r\n\r\n    return ( \r\n        <div className=\"text-center\">\r\n            <h1 className=\"bg-light text-dark fw-bold text-center shadow w-75 mb-4 mx-auto\">Codeforces Profile Viewer</h1>\r\n            <form className=\"d-inline p-3 mx-auto mt-5\">\r\n                <label>\r\n                    <input type=\"text\" value = {handle} required onChange = {e => setHandle(e.target.value)} placeholder=\"Codeforces Handle\"/>\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" onClick = {handleData}/>\r\n            </form>\r\n          \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import {useState, useEffect} from 'react';\r\n\r\nconst useFetch = (url) => {\r\n\r\n    const [data,setData] = useState(null);\r\n    const [pending,setPending] = useState(true);\r\n    const [error,setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n\r\n        fetch(url,{signal : abortCont.signal})\r\n        .then(res => {\r\n            if(!res.ok){\r\n                throw Error('Could not fetch the data from the resource');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setData(data);\r\n            setPending(false);\r\n        }).catch(err => {\r\n            if(err.name !== 'AbortError'){\r\n                setPending(false); \r\n                setError(err.message);   \r\n            }\r\n            \r\n        })\r\n        return () => abortCont.abort(); \r\n     },[]);\r\n\r\n    return {data,pending,error};\r\n}\r\n \r\nexport default useFetch;","import { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogList = () => {\r\n\r\n    const {handle} = useParams();\r\n    const url = \" https://codeforces.com/api/user.info?handles=\" + handle;\r\n    const {data : blogs,pending,error} =  useFetch(url);\r\n\r\n\r\n    return ( \r\n        <div className=\"BlogList mt-5\">\r\n            {error && <div>{error}</div>}\r\n            {pending && <p>Loading...</p>}\r\n            {blogs && (blogs.result).map((blog) => (\r\n                <div className = \"card  mt-3 text-center mx-auto p-2\"  key = {blog.maxRating}>\r\n                    <img src={blog.avatar} className = \"rounded-3 p-2 shadow border border-secondary border-3\" alt=\"this is an image\" />\r\n                    <h4 className=\"card-title\">{blog.handle}</h4>\r\n                    <p className=\"p-1 m-0\">Current Rank : {blog.rank} {blog.rating}</p>\r\n                    <p className=\"p-1 m-0\">Highest Rank : {blog.maxRank} {blog.maxRating}</p>\r\n                    <p className=\"p-1 m-0\">Contribution : {blog.contribution}</p>\r\n                    <p className=\"p-1 m-0\">Friend of {blog.friendOfCount} user</p>\r\n                    <Link to = {`/contest/${blog.handle}`} className=\"btn btn-success\">Contests</Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogList;\r\n","const DisplayCont = (prop) => {\r\n    const contest = prop.contest;\r\n    return ( \r\n        <tbody className=\"BlogList\">\r\n            {contest.map((blog) => (\r\n                <tr className = \"contest-box\" key = {blog.contestId}>\r\n                    <td>{blog.contestName}</td>\r\n                    <td className=\"text-end\">{blog.rank}</td>\r\n                    <td className=\"text-end\">{blog.oldRating}</td>\r\n                    <td className=\"text-end\">{blog.newRating}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n     );\r\n}\r\n \r\nexport default DisplayCont;","import { useParams } from \"react-router\";\r\nimport DisplayCont from \"./displayContest\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\nconst Contests = () => {\r\n\r\n    const {handle} = useParams();\r\n    const url = \"https://codeforces.com/api/user.rating?handle=\" + handle ;\r\n    const {data : cont,pending, error} = useFetch(url);\r\n\r\n    console.log(cont);\r\n    \r\n    return ( \r\n        <div className=\"m-md-5\">\r\n           <table className=\"table table-responsive\" >\r\n            {error && <div>{error}</div>}\r\n            {pending && <p>Loading...</p>}\r\n            {cont && <thead>\r\n                <tr>\r\n                <th scope=\"col\">Contest Name</th>\r\n                <th scope=\"col\" className=\"text-end\">Rank</th>\r\n                <th scope=\"col\" className=\"text-end\">Old Rating</th>\r\n                <th scope=\"col\" className=\"text-end\">New Rating</th>\r\n                </tr>\r\n            </thead>}\r\n            {cont && <DisplayCont contest = {cont.result} />}\r\n        </table> \r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default Contests;\r\n\r\n","import './App.css';\nimport Navbar from './Navbar';\nimport React, { Component } from 'react';\nimport BlogList from './display';\nimport {BrowserRouter as Router, Route ,Switch} from 'react-router-dom';\nimport Contests from './contest';\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n      </div>\n      <Switch>\n        <Route path = \"/display/:handle\">\n          <BlogList/>\n          </Route>\n        <Route path = \"/contest/:handle\">\n          <Contests />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}